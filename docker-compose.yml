
version: '3.8'

networks:
    public:
      driver: bridge
    dmz:
      driver: bridge
    private:
      driver: bridge

services:
  nginx:
    image: nginx:1.15-alpine
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    networks:
      - public
      - dmz
      - private

  vouch-proxy:
    image: voucher/vouch-proxy
    environment: 
      - VOUCH_COOKIE_SECURE=true
      - VOUCH_COOKIE_DOMAIN=${VOUCH_COOKIE_DOMAIN}
      - VOUCH_ALLOWALLUSERS=true
      - OAUTH_PROVIDER=${OAUTH_PROVIDER}
      - OAUTH_CLIENT_ID=${OAUTH_CLIENT_ID}
      - OAUTH_CLIENT_SECRET=${OAUTH_CLIENT_SECRET}
    restart: unless-stopped
    ports:
      - "9090:9090"
    networks:
      - dmz
    
  fastapi:
    build:
      context: ./app
      network: host
    ports:
      - "8000:8000"
    environment:
      KAFKA_NODE: "true"
      KAFKA_SERVER: kafka:9092
      KAFKA_TOPIC: test
      FAST_PASSWORD: ${FAST_PASSWORD}
      FAST_USERNAME: ${FAST_USERNAME}
      FAST_HOSTNAME: ${FAST_HOSTNAME}
      FAST_PLATFORM: ${FAST_PLATFORM}
    restart: unless-stopped
    networks:
      - private
  
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - private
    restart: unless-stopped
  
  kafka:
    build: 
      context: ./kafka-docker
      network: host
    ports:
      - "9092:9092"
    environment:
      KAFKA_CREATE_TOPICS: "test:1:1"
      KAFKA_ADVERTISED_HOST_NAME: 10.10.0.230
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - private
    restart: unless-stopped
  
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    networks:
      - private
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
